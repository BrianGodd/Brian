#include <iostream>
#include <string.h> 
#include <math.h>
#include <windows.h>
#include <ctype.h>
using namespace std;
HANDLE h = GetStdHandle(STD_OUTPUT_HANDLE);	
bool first;
string whof="B";
string inichess[10][10]={{"RR","  ","  ","RP","  ","  ","BP","  ","  ","BR"},
                  {"RT","  ","RC","  ","  ","  ","  ","BC","  ","BT"},
                  {"RM","  ","  ","RP","  ","  ","BP","  ","  ","BM"},
                  {"RG","  ","  ","  ","  ","  ","  ","  ","  ","BG"},
                  {"RK","  ","  ","RP","  ","  ","BP","  ","  ","BK"},
                   {"RG","  ","  ","  ","  ","  ","  ","  ","  ","BG"},
                  {"RM","  ","  ","RP","  ","  ","BP","  ","  ","BM"},
                  {"RT","  ","RC","  ","  ","  ","  ","BC","  ","BT"},
                  {"RR","  ","  ","RP","  ","  ","BP","  ","  ","BR"}
                  };
string chess[10][10];
void rechess()
{
	for(int i=0; i<10; i++){
		for(int j=0; j<10; j++){
			chess[i][j] = inichess[i][j];
		}
	}
}
int printchess(bool a){
	cout<<"          1  2  3  4  5  6  7  8  9 \n         ___________________________\n";
	for(int i=0;i<10;i++){
		cout<<i+1<<"\t| ";
		for(int j=0;j<9;j++)
		{
			if(chess[j][abs(a*9-i)].find("R") == 0)
				SetConsoleTextAttribute(h, 12);
			else	SetConsoleTextAttribute(h, 15);
			cout<<chess[j][abs(a*9-i)]<<" ";
			SetConsoleTextAttribute(h, 15);
		}
		cout<<"\n";
	}           
}    
int changechess(int ,int ,int ,int ,string );  
int predictprewin(int ,int ,int ,int ,int ,int ,string ,string ,string );
int predictwin(int ,int ,string );
int RK1=4,RK2,BK1=4,BK2; 
int main()
{
	system("cls");
	cout<<"		Ready Player One	";
	Sleep(1400);
	start : 
	rechess();
	string a,b,c;
	int x1,y1,x2,y2;
	bool Start=1;
	system("cls");
	cout<<"Red or Black?\n";
	cin>>a;
	if(a=="Red"){
		whof = "B";
		cout<<"You First!\n\n";
		first=1;
	}
	else if(a=="Black"){
		whof = "B";
		cout<<"You enemy First!\n\n";
		first=0;
	}
	else{
		cout<<"Wrong Command.\a\n";
		Sleep(700);
		goto start;
	}
	RK2=0;
	BK2=9;
	Sleep(700);
	system("cls");
	while(true){
	//	cout<<BK1<<BK2<<"  "<<RK1<<RK2;
		cout<<endl;
	//	first=1;                                // ***改變棋盤方向 
	if(Start==0){ 
		if(predictwin(x2-1,abs(y2-1-first*9),a)){
			if(whof=="R"){
				if(a=="Black")
					cout<<"You Lose!";
				else
					cout<<"You Win!";
			}
			if(whof=="B"){
				if(a=="Red")
					cout<<"You Lose!";
				else
					cout<<"You Win!";
			}
			cout<<endl;
			printchess(first);
			//return 0;
			Sleep(700);
			int playmode = 0;
			cout<<"\nPlay again/Leave game ? (Input : 1/0)\n";
			cin>>playmode;
			if(playmode)
			{
				Sleep(700);
				goto start;
			}
			else
			{
				cout<<"\n		Thanks for playing my game.		\n";
				Sleep(500);
				cout<<"\n		Remember you are the BEST.\n";
				Sleep(700);
				return(0);
			}
		}
		if(predictprewin(x1-1,abs(y1-1-first*9),RK1,RK2,BK1,BK2,"RK","BK",a)) 
			cout<<"Check\n";
	}
		if(whof=="R")
			cout<<"It's Black turn.\n\n";
		else
			cout<<"It's Red turn.\n\n";
    	printchess(first);
    	cout<<"chess indicator?(x,y)";
    	cin>>x1>>y1;
    	cout<<"move to?(x.y)";
    	cin>>x2>>y2;
    	system("cls");
    //	if(a=="Black")
    //		first=1;	
		string eaten=chess[x2-1][abs(y2-1-first*9)];	
    	if(changechess(x1-1,abs(y1-1-first*9),x2-1,abs(y2-1-first*9),a)==0)
    	    cout<<"Wrong move!\a";				
		else{
			if(Start){
				if(whof=="B")
					whof="R";
				else
					whof="B";
				Start=0;	
			}
			else{
			if(predictprewin(x2-1,abs(y2-1-first*9),RK1,RK2,BK1,BK2,"RK","BK",a)){
				chess[x1-1][abs(y1-1-first*9)]=chess[x2-1][abs(y2-1-first*9)];
				chess[x2-1][abs(y2-1-first*9)]=eaten;
				if(chess[x1-1][abs(y1-1-first*9)]=="RK"){
					RK1=x1-1;
					RK2=abs(y1-1-first*9);
				}
				else if(chess[x1-1][abs(y1-1-first*9)]=="BK"){
					BK1=x1-1;
					BK2=abs(y1-1-first*9);
				}
				cout<<"You can't move like that!\a";
			}
			else{		
				if(whof=="B")
					whof="R";
				else
					whof="B";	
			}
			}
		}
	}
}
int changechess(int a,int b,int c,int d,string e){
	if(chess[c][d].find(whof)==0||chess[c][d].find(whof)==1||chess[c][d].find(" ")==0){
		if(chess[a][b].find(whof)!=0){		
		if(chess[a][b]=="  "||a>8||a<0||b>9||b<0||c>8||c<0||d>9||d<0)				
			return 0;
		// 車 :   
		if(chess[a][b]=="RR"||chess[a][b]=="BR"){		
				if(a==c){
					for(int i=min(b,d)+1;i<max(b,d);i++)
						if(chess[a][i]!="  "){
							return 0;				
						}
					
					chess[c][d]=chess[a][b];
					chess[a][b]="  ";					
					return 1;
				}
				else if(b==d){
					for(int i=min(a,c)+1;i<max(a,c);i++){
						if(chess[i][b]!="  "){
							return 0;				
						}
					}
					chess[c][d]=chess[a][b];
					chess[a][b]="  ";					
					return 1;
				}
				else
					return 0;
			}
		//  炮 : 
		
		if(chess[a][b]=="RC"||chess[a][b]=="BC"){
			if(a==c){
				int count=0;
				for(int i=max((b+(d-b)/abs(d-b)),d);i>=min((b+(d-b)/abs(d-b)),d);i--)
					if(chess[a][i]!="  ")
						count++;
					if(count==0){
						chess[c][d]=chess[a][b];
						chess[a][b]="  ";
						}
					else if(count==2&&chess[c][d]!="  "){
						chess[c][d]=chess[a][b];
						chess[a][b]="  ";
						}
					else
						return 0;
					return 1;
				}
			
			
			else	if(b==d){
				int count=0;
				for(int i=max((a+(c-a)/abs(c-a)),c);i>=min((a+(c-a)/abs(c-a)),c);i--)
					if(chess[i][b]!="  ")
						count++;
					if(count==0){
						chess[c][d]=chess[a][b];
						chess[a][b]="  ";
						}
					else if(count==2&&chess[c][d]!="  "){
						chess[c][d]=chess[a][b];
						chess[a][b]="  ";
						}
					else
						return 0;
					return 1;
			
			}
			else
			return 0;
		}
		// 馬:
		if(chess[a][b]=="RT"||chess[a][b]=="BT"){
			if(abs(a-c)+abs(b-d)==3&&a!=c&&b!=d){
				if(abs(a-c)==2&&chess[max(a,c)-1][b]=="  "){
				chess[c][d]=chess[a][b];
				chess[a][b]="  ";
				return 1;}
				else if(abs(b-d)==2&&chess[a][max(b,d)-1]=="  "){
				chess[c][d]=chess[a][b];
				chess[a][b]="  ";
				return 1;}
				}
			else
				return 0;
			}
		// 象: 
		if(chess[a][b]=="RM"||chess[a][b]=="BM"){
			if(abs(a-c)==2&&abs(b-d)==2&&chess[max(a,c)-1][max(b,d)-1]=="  "){
				if(chess[a][b].find("R")==0){
					if(d<=4&&d>=0){
						chess[c][d]=chess[a][b];
						chess[a][b]="  ";
					}
					else
					return 0;
					}
				else if(chess[a][b].find("B")==0){
					if(d<=9&&d>=5){
						chess[c][d]=chess[a][b];
						chess[a][b]="  ";
					}
					else
					return 0;
					}
				else
					return 0;
				}
				else
					return 0;
				return 1;
			}
			//士:
			if(chess[a][b]=="BG"||chess[a][b]=="RG"){
				if(abs(a-c)==1&&abs(b-d)==1){
					if(c>=3&&c<=5){
						if(chess[a][b].find("B")==0){
							if(e=="Red"&&d>=7&&d<=9){
								chess[c][d]=chess[a][b];
								chess[a][b]="  ";
								return 1;
								}
							if(e=="Black"&&d>=0&&d<=2){
								chess[c][d]=chess[a][b];
								chess[a][b]="  ";
								return 1;
								}
						}
						if(chess[a][b].find("R")==0){														
						if(e=="Black"&&d>=7&&d<=9){
								chess[c][d]=chess[a][b];
								chess[a][b]="  ";
								return 1;
								}
								if(e=="Red"&&d>=0&&d<=2){
								chess[c][d]=chess[a][b];
								chess[a][b]="  ";
								return 1;
								}
							}
							}
						}
						return 0;				
				}
				//將:
			if(chess[a][b]=="BK"||chess[a][b]=="RK"){
				if(chess[c][d]!="BP"&&chess[c][d]!="RP"){
					if(chess[c][d]!="BK"&&chess[c][d]!="RK"){
					if(abs(a-c)+abs(b-d)==1){
					if(c>=3&&c<=5){
						if(chess[a][b]=="BK"&&d>=7&&d<=9){
								chess[c][d]=chess[a][b];
								chess[a][b]="  ";
								BK1=c;
								BK2=d;
								return 1;
						}
						if(chess[a][b]=="RK"&&d>=0&&d<=2){													
								chess[c][d]=chess[a][b];
								chess[a][b]="  ";
								RK1=c;
								RK2=d;
								return 1;
							}
							}
						}
				}		
				else{
						if(chess[a][b]=="BK"&&a==RK1){
								int count=0;
								for(int i=max(RK2,b);i>=min(RK2,b);i--)
									if(chess[RK1][i]!="  ")
										count++;
								if(count==2){
									chess[c][d]=chess[a][b];
									chess[a][b]="  ";
									return 1;
								}
						}
						else if(chess[a][b]=="RK"&&a==BK1){
								int count=0;
								for(int i=max(BK2,b);i>=min(BK2,b);i--)
									if(chess[BK1][i]!="  ")
										count++;
								if(count==2){
									chess[c][d]=chess[a][b];
									chess[a][b]="  ";
									return 1;
								}
							}
				}
			}
				return 0;	
						}	
				
				//卒: 
				 if(chess[a][b]=="RP"){
				 	bool p=false;
					if(e=="Red"&&b<=4&&a==c&&d-b==1)
						p=1;
					if(e=="Red"&&b>=5&&abs(a-c)+abs(b-d)==1&&d-b!=-1)
						p=1;
					if(e=="Black"&&b<=4&&a==c&&d-b==1)
						p=1;	
					if(e=="Black"&&b>=5&&abs(a-c)+abs(b-d)==1&&d-b!=-1)
						p=1;
					if(p){
						chess[c][d]=chess[a][b];
						chess[a][b]="  ";
						return 1;
					}
					else
						return 0;
		}
				if(chess[a][b]=="BP"){
						bool p=false;
						if(e=="Red"&&b>4&&a==c&&d-b==-1)
							p=1;
						if(e=="Red"&&b<=4&&abs(a-c)+abs(b-d)==1&&d-b!=1)
							p=1;
						if(e=="Black"&&b>4&&a==c&&d-b==-1)
							p=1;	
						if(e=="Black"&&b<=4&&abs(a-c)+abs(b-d)==1&&d-b!=1)
							p=1;
						if(p){
							chess[c][d]=chess[a][b];
							chess[a][b]="  ";
							return 1;
						}
						else
							return 0;
				}
		}
		else
        return	0   ;
}
else
 return 0;
}
int predictprewin(int x,int y,int k1,int k2,int k3,int k4,string wk1,string wk2,string e){
	if(whof=="B")
		whof="R";
	else
		whof="B";
	for(int i=0;i<9;i++){
		for(int j=0;j<10;j++){
			if(chess[x][y].find("R")==0||chess[x][y]=="RR"){
				if(changechess(i,j,k1,k2,e)){
					chess[i][j]=chess[k1][k2];
					chess[k1][k2]=wk1;
					if(whof=="B")
						whof="R";
					else
						whof="B";
					return 1;
				}
			}
			if(chess[x][y].find("B")==0){
				if(changechess(i,j,k3,k4,e)){
					chess[i][j]=chess[k3][k4];
					chess[k3][k4]=wk2;
					if(whof=="B")
						whof="R";
					else
						whof="B";
					return 1;
				}
			}
		}
	}
	if(whof=="B")
		whof="R";
	else
		whof="B";
	return 0;
}
int predictwin(int x,int y,string e){
	if(predictprewin(x,y,BK1,BK2,RK1,RK2,"BK","RK",e)){
		for(int i=0;i<9;i++){
			for(int j=0;j<10;j++){
				if(chess[i][j][0]!=chess[x][y][0]){
					for(int k=0;k<9;k++){
						for(int l=0;l<10;l++){
							if(chess[k][l][0]==chess[x][y][0]||chess[k][l]=="  "){
								string meaten=chess[k][l];
								if(changechess(i,j,k,l,e)){
								//	cout<<i<<j<<"  "<<k<<l<<chess[k][l]<<endl;    : 解法 
									if(!predictprewin(k,l,RK1,RK2,BK1,BK2,"RK","BK",e)){
												if(chess[k][l]=="RK"){
													RK1=i;
													RK2=j;
												}
												else if(chess[k][l]=="BK"){
													BK1=i;
													BK2=j;
												}
												chess[i][j]=chess[k][l];
												chess[k][l]=meaten;												
												cout<<"Check\n";
												return 0;
										}
										else{
												if(chess[k][l]=="RK"){
													RK1=i;
													RK2=j;
												}
												else if(chess[k][l]=="BK"){
													BK1=i;
													BK2=j;
												}
												chess[i][j]=chess[k][l];
												chess[k][l]=meaten;
										}									
								}
							}
						}
					}
				}
			}
		}
		return 1;
	}
	else
	return 0;
}
